#!/bin/bash

istio_profile=default
PROFILE=${1:-$default_profile}

if [ ! -d "istio" ]
then
    curl -L https://istio.io/downloadIstio | sh -
    ISTIO_VERSION=$(curl -L -s https://api.github.com/repos/istio/istio/releases | grep tag_name | sed "s/ *\"tag_name\": *\"\\(.*\\)\",*/\\1/" | grep -v -E "(alpha|beta|rc)\.[0-9]$" | sort -t"." -k 1,1 -k 2,2 -k 3,3 -k 4,4 | tail -n 1)
    mv istio-$ISTIO_VERSION istio
    rm istio-*.tar.gz
fi

ISTIO_BIN=./istio/bin/istioctl
MANIFEST_PATH=/tmp/generated_manifest.yaml

echo "Generating manifest for istio installation..."
$ISTIO_BIN manifest generate --set profile=$PROFILE > $MANIFEST_PATH
echo "Manifest generated in $MANIFEST_PATH"


echo "Installing istio on sirius-a..."
CONTEXT_NAME=$(kubectl config get-contexts | grep sirius-a | awk '{print $2}')
kubectl config use-context $CONTEXT_NAME
$ISTIO_BIN install --set profile=$PROFILE
echo "Istio has been installed on sirius-a."

echo "Verifying istio installation on sirius-a..."
$ISTIO_BIN verify-install -f $MANIFEST_PATH

echo "Enabling automatic injection of envoy sidecar proxy when deploying applications."
kubectl label namespace default istio-injection=enabled

echo "Istio setup on sirius-a."


echo "Installing istio on sirius-b..."
CONTEXT_NAME=$(kubectl config get-contexts | grep sirius-b | awk '{print $2}')
kubectl config use-context $CONTEXT_NAME
$ISTIO_BIN install --set profile=$PROFILE
echo "Istio has been installed on sirius-b."

echo "Verifying istio installation on sirius-b..."
$ISTIO_BIN verify-install -f $MANIFEST_PATH

echo "Enabling automatic injection of envoy sidecar proxy when deploying applications."
kubectl label namespace default istio-injection=enabled

echo "Istio setup on sirius-b."
